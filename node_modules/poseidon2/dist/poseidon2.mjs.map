{"version":3,"file":"poseidon2.mjs","sources":["../src/core/F1Field.ts","../src/core/Poseidon2.ts","../src/core/Poseidon2Params.ts"],"sourcesContent":["class F1Field {\n  prime: bigint;\n  zero = BigInt(0);\n  one = BigInt(1);\n  constructor(prime: bigint) {\n    this.prime = prime;\n  }\n  e(x: number | bigint | string) {\n    if (typeof x === \"bigint\") {\n      return x % this.prime;\n    } else {\n      return BigInt(x) % this.prime;\n    }\n  }\n  add(x: bigint, y: bigint) {\n    return (x + y) % this.prime;\n  }\n  sub(x: bigint, y: bigint) {\n    return (this.prime + x - y) % this.prime;\n  }\n  mul(x: bigint, y: bigint) {\n    return (x * y) % this.prime;\n  }\n  square(x: bigint) {\n    return (x * x) % this.prime;\n  }\n  div(x: bigint, y: bigint) {\n    return (x / y) % this.prime;\n  }\n}\n\nexport { F1Field };\n","import { F1Field } from \"./F1Field\";\nimport type { Poseidon2Params } from \"./Poseidon2Params\";\n\nclass Poseidon2 {\n  params: Poseidon2Params;\n  primeField: F1Field;\n  constructor(params: Poseidon2Params, primeField: F1Field) {\n    this.params = params;\n    this.primeField = primeField;\n  }\n  getT() {\n    return this.params.t;\n  }\n  sbox(input: bigint[]): bigint[] {\n    return input.map((x: bigint) => this.sboxP(x));\n  }\n  sboxP(input: bigint): bigint {\n    const input2 = this.primeField.square(input);\n    if (this.params.d == 3) {\n      return this.primeField.mul(input2, input);\n    } else if (this.params.d == 5) {\n      return this.primeField.mul(this.primeField.square(input2), input);\n    } else if (this.params.d == 7) {\n      return this.primeField.mul(\n        this.primeField.square(input2),\n        this.primeField.mul(input2, input)\n      );\n    } else {\n      throw new Error(\"Invalid d paramter, must be 3, 5 or 7\");\n    }\n  }\n  matmulExternal(input: bigint[]): bigint[] {\n    const t = this.params.t;\n    if (t == 2) {\n      const sum = this.primeField.add(input[0], input[1]);\n      input[0] = this.primeField.add(input[0], sum);\n      input[1] = this.primeField.add(input[1], sum);\n    } else if (t == 3) {\n      const sum = this.primeField.add(\n        this.primeField.add(input[0], input[1]),\n        input[2]\n      );\n      input[0] = this.primeField.add(input[0], sum);\n      input[1] = this.primeField.add(input[1], sum);\n      input[2] = this.primeField.add(input[2], sum);\n    } else if (t == 4 || t == 8 || t == 12 || t == 16 || t == 20 || t == 24) {\n      const t4 = t / 4;\n      for (let i = 0; i < t4; i++) {\n        const startIndex = i * 4;\n        let t_0 = input[startIndex];\n        t_0 = this.primeField.add(t_0, input[startIndex + 1]);\n\n        let t_1 = input[startIndex + 2];\n        t_1 = this.primeField.add(t_1, input[startIndex + 3]);\n\n        let t_2 = input[startIndex + 1];\n        t_2 = this.primeField.add(t_2, t_2);\n        t_2 = this.primeField.add(t_2, t_1);\n\n        let t_3 = input[startIndex + 3];\n        t_3 = this.primeField.add(t_3, t_3);\n        t_3 = this.primeField.add(t_3, t_0);\n\n        let t_4 = t_1;\n        t_4 = this.primeField.add(t_4, t_4);\n        t_4 = this.primeField.add(t_4, t_4);\n        t_4 = this.primeField.add(t_4, t_3);\n\n        let t_5 = t_0;\n        t_5 = this.primeField.add(t_5, t_5);\n        t_5 = this.primeField.add(t_5, t_5);\n\n        t_5 = this.primeField.add(t_5, t_2);\n        let t_6 = t_3;\n        t_6 = this.primeField.add(t_6, t_5);\n\n        let t_7 = t_2;\n        t_7 = this.primeField.add(t_7, t_4);\n\n        input[startIndex] = t_6;\n        input[startIndex + 1] = t_5;\n        input[startIndex + 2] = t_7;\n        input[startIndex + 3] = t_4;\n      }\n      const stored = [\n        this.primeField.zero,\n        this.primeField.zero,\n        this.primeField.zero,\n        this.primeField.zero,\n      ];\n      for (let l = 0; l < 4; l++) {\n        stored[l] = input[l];\n        for (let j = 1; j < t4; j++) {\n          stored[l] = this.primeField.add(stored[l], input[4 * j + l]);\n        }\n      }\n      for (let i = 0; i < input.length; i++) {\n        input[i] = this.primeField.add(input[i], stored[i % 4]);\n      }\n    } else {\n      throw new Error(\n        \"Invalid t parameter, must be 2, 3, 4, 8, 12, 16, 20 or 24\"\n      );\n    }\n    return input;\n  }\n  matmulInternal(input: bigint[]): bigint[] {\n    const t = this.params.t;\n    if (t == 2) {\n      const sum = this.primeField.add(input[0], input[1]);\n      input[0] = this.primeField.add(input[0], sum);\n      input[1] = this.primeField.add(\n        this.primeField.add(input[1], input[1]),\n        sum\n      );\n    } else if (t == 3) {\n      const sum = this.primeField.add(\n        this.primeField.add(input[0], input[1]),\n        input[2]\n      );\n      input[0] = this.primeField.add(input[0], sum);\n      input[1] = this.primeField.add(input[1], sum);\n      input[2] = this.primeField.add(\n        this.primeField.add(input[2], input[2]),\n        sum\n      );\n    } else if (t == 4 || t == 8 || t == 12 || t == 16 || t == 20 || t == 24) {\n      let sum = input[0];\n      for (let i = 1; i < t; i++) {\n        sum = this.primeField.add(sum, input[i]);\n      }\n      for (let i = 0; i < input.length; i++) {\n        input[i] = this.primeField.add(\n          this.primeField.mul(this.params.mat_internal_diag_m_1[i], input[i]),\n          sum\n        );\n      }\n    } else {\n      throw new Error(\n        \"Invalid t parameter, must be 2, 3, 4, 8, 12, 16, 20 or 24\"\n      );\n    }\n    return input;\n  }\n  permute(input: bigint[]): bigint[] {\n    const t = this.params.t;\n    if (input.length != t) {\n      throw new Error(\"Invalid input length\");\n    }\n    let current_state = input;\n    this.matmulExternal(current_state);\n    for (let r = 0; r < this.params.rounds_f_beginning; r++) {\n      current_state = this.addRc(current_state, this.params.round_constants[r]);\n      current_state = this.sbox(current_state);\n      this.matmulExternal(current_state);\n    }\n    const p_end = this.params.rounds_f_beginning + this.params.rounds_p;\n    for (let r = this.params.rounds_f_beginning; r < p_end; r++) {\n      current_state[0] = this.primeField.add(\n        current_state[0],\n        this.params.round_constants[r][0]\n      );\n      current_state[0] = this.sboxP(current_state[0]);\n      this.matmulInternal(current_state);\n    }\n    for (let r = p_end; r < this.params.rounds; r++) {\n      current_state = this.addRc(current_state, this.params.round_constants[r]);\n      current_state = this.sbox(current_state);\n      this.matmulExternal(current_state);\n    }\n    return current_state;\n  }\n  addRc(input: bigint[], rc: bigint[]): bigint[] {\n    return input.map((a, i) => this.primeField.add(a, rc[i]));\n  }\n}\n\nexport { Poseidon2 };\n","interface Poseidon2Params {\n  t: number;\n  d: number;\n  rounds_f_beginning: number;\n  rounds_p: number;\n  rounds_f_end: number;\n  rounds: number;\n  mat_internal_diag_m_1: bigint[];\n  _mat_internal: bigint[][];\n  round_constants: bigint[][];\n}\n\nfunction getPoseidon2Params(\n  t: number,\n  d: number,\n  rounds_f: number,\n  rounds_p: number,\n  mat_internal_diag_m_1: bigint[],\n  mat_internal: bigint[][],\n  round_constants: bigint[][]\n): Poseidon2Params {\n  const r = rounds_f / 2;\n  const rounds = rounds_f + rounds_p;\n  return {\n    t,\n    d,\n    rounds_f_beginning: r,\n    rounds_p,\n    rounds_f_end: r,\n    rounds,\n    mat_internal_diag_m_1: mat_internal_diag_m_1,\n    _mat_internal: mat_internal,\n    round_constants: round_constants,\n  };\n}\n\nexport type { Poseidon2Params };\nexport { getPoseidon2Params };\n"],"names":["F1Field","prime","__publicField","x","y","Poseidon2","params","primeField","input","input2","t","sum","t4","i","startIndex","t_0","t_1","t_2","t_3","t_4","t_5","t_6","t_7","stored","l","j","current_state","r","p_end","rc","a","getPoseidon2Params","d","rounds_f","rounds_p","mat_internal_diag_m_1","mat_internal","round_constants","rounds"],"mappings":"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"}