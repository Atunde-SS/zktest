{"version":3,"file":"goldilocks-12.mjs","sources":["../src/goldilocks-12/constants.ts","../src/goldilocks-12/instance.ts","../src/goldilocks-12/hash.ts","../src/goldilocks-12/index.ts"],"sourcesContent":["const MAT_DIAG12_M_1: bigint[] = [\n  BigInt(\"14102670999874605823\"),\n  BigInt(\"15585654191999307701\"),\n  BigInt(\"940187017142450254\"),\n  BigInt(\"8747386241522630710\"),\n  BigInt(\"6750641561540124746\"),\n  BigInt(\"7440998025584530006\"),\n  BigInt(\"6136358134615751535\"),\n  BigInt(\"12413576830284969610\"),\n  BigInt(\"11675438539028694708\"),\n  BigInt(\"17580553691069642925\"),\n  BigInt(\"892707462476851330\"),\n  BigInt(\"15167485180850043743\"),\n];\n\nconst zero = BigInt(0);\nconst MAT_INTERNAL12: bigint[][] = [];\nconst RC12: bigint[][] = [\n  [\n    BigInt(\"0x13dcf33aba214f46\"),\n    BigInt(\"0x30b3b654a1da6d83\"),\n    BigInt(\"0x1fc634ada6159b56\"),\n    BigInt(\"0x937459964dc03466\"),\n    BigInt(\"0xedd2ef2ca7949924\"),\n    BigInt(\"0xede9affde0e22f68\"),\n    BigInt(\"0x8515b9d6bac9282d\"),\n    BigInt(\"0x6b5c07b4e9e900d8\"),\n    BigInt(\"0x1ec66368838c8a08\"),\n    BigInt(\"0x9042367d80d1fbab\"),\n    BigInt(\"0x400283564a3c3799\"),\n    BigInt(\"0x4a00be0466bca75e\"),\n  ],\n  [\n    BigInt(\"0x7913beee58e3817f\"),\n    BigInt(\"0xf545e88532237d90\"),\n    BigInt(\"0x22f8cb8736042005\"),\n    BigInt(\"0x6f04990e247a2623\"),\n    BigInt(\"0xfe22e87ba37c38cd\"),\n    BigInt(\"0xd20e32c85ffe2815\"),\n    BigInt(\"0x117227674048fe73\"),\n    BigInt(\"0x4e9fb7ea98a6b145\"),\n    BigInt(\"0xe0866c232b8af08b\"),\n    BigInt(\"0x00bbc77916884964\"),\n    BigInt(\"0x7031c0fb990d7116\"),\n    BigInt(\"0x240a9e87cf35108f\"),\n  ],\n  [\n    BigInt(\"0x2e6363a5a12244b3\"),\n    BigInt(\"0x5e1c3787d1b5011c\"),\n    BigInt(\"0x4132660e2a196e8b\"),\n    BigInt(\"0x3a013b648d3d4327\"),\n    BigInt(\"0xf79839f49888ea43\"),\n    BigInt(\"0xfe85658ebafe1439\"),\n    BigInt(\"0xb6889825a14240bd\"),\n    BigInt(\"0x578453605541382b\"),\n    BigInt(\"0x4508cda8f6b63ce9\"),\n    BigInt(\"0x9c3ef35848684c91\"),\n    BigInt(\"0x0812bde23c87178c\"),\n    BigInt(\"0xfe49638f7f722c14\"),\n  ],\n  [\n    BigInt(\"0x8e3f688ce885cbf5\"),\n    BigInt(\"0xb8e110acf746a87d\"),\n    BigInt(\"0xb4b2e8973a6dabef\"),\n    BigInt(\"0x9e714c5da3d462ec\"),\n    BigInt(\"0x6438f9033d3d0c15\"),\n    BigInt(\"0x24312f7cf1a27199\"),\n    BigInt(\"0x23f843bb47acbf71\"),\n    BigInt(\"0x9183f11a34be9f01\"),\n    BigInt(\"0x839062fbb9d45dbf\"),\n    BigInt(\"0x24b56e7e6c2e43fa\"),\n    BigInt(\"0xe1683da61c962a72\"),\n    BigInt(\"0xa95c63971a19bfa7\"),\n  ],\n  [\n    BigInt(\"0x4adf842aa75d4316\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xf8fbb871aa4ab4eb\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x68e85b6eb2dd6aeb\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x07a0b06b2d270380\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xd94e0228bd282de4\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x8bdd91d3250c5278\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x209c68b88bba778f\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xb5e18cdab77f3877\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xb296a3e808da93fa\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x8370ecbda11a327e\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x3f9075283775dad8\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xb78095bb23c6aa84\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x3f36b9fe72ad4e5f\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x69bc96780b10b553\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x3f1d341f2eb7b881\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x4e939e9815838818\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xda366b3ae2a31604\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xbc89db1e7287d509\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x6102f411f9ef5659\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x58725c5e7ac1f0ab\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0x0df5856c798883e7\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xf7bb62a8da4c961b\"),\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n    zero,\n  ],\n  [\n    BigInt(\"0xc68be7c94882a24d\"),\n    BigInt(\"0xaf996d5d5cdaedd9\"),\n    BigInt(\"0x9717f025e7daf6a5\"),\n    BigInt(\"0x6436679e6e7216f4\"),\n    BigInt(\"0x8a223d99047af267\"),\n    BigInt(\"0xbb512e35a133ba9a\"),\n    BigInt(\"0xfbbf44097671aa03\"),\n    BigInt(\"0xf04058ebf6811e61\"),\n    BigInt(\"0x5cca84703fac7ffb\"),\n    BigInt(\"0x9b55c7945de6469f\"),\n    BigInt(\"0x8e05bf09808e934f\"),\n    BigInt(\"0x2ea900de876307d7\"),\n  ],\n  [\n    BigInt(\"0x7748fff2b38dfb89\"),\n    BigInt(\"0x6b99a676dd3b5d81\"),\n    BigInt(\"0xac4bb7c627cf7c13\"),\n    BigInt(\"0xadb6ebe5e9e2f5ba\"),\n    BigInt(\"0x2d33378cafa24ae3\"),\n    BigInt(\"0x1e5b73807543f8c2\"),\n    BigInt(\"0x09208814bfebb10f\"),\n    BigInt(\"0x782e64b6bb5b93dd\"),\n    BigInt(\"0xadd5a48eac90b50f\"),\n    BigInt(\"0xadd4c54c736ea4b1\"),\n    BigInt(\"0xd58dbb86ed817fd8\"),\n    BigInt(\"0x6d5ed1a533f34ddd\"),\n  ],\n  [\n    BigInt(\"0x28686aa3e36b7cb9\"),\n    BigInt(\"0x591abd3476689f36\"),\n    BigInt(\"0x047d766678f13875\"),\n    BigInt(\"0xa2a11112625f5b49\"),\n    BigInt(\"0x21fd10a3f8304958\"),\n    BigInt(\"0xf9b40711443b0280\"),\n    BigInt(\"0xd2697eb8b2bde88e\"),\n    BigInt(\"0x3493790b51731b3f\"),\n    BigInt(\"0x11caf9dd73764023\"),\n    BigInt(\"0x7acfb8f72878164e\"),\n    BigInt(\"0x744ec4db23cefc26\"),\n    BigInt(\"0x1e00e58f422c6340\"),\n  ],\n  [\n    BigInt(\"0x21dd28d906a62dda\"),\n    BigInt(\"0xf32a46ab5f465b5f\"),\n    BigInt(\"0xbfce13201f3f7e6b\"),\n    BigInt(\"0xf30d2e7adb5304e2\"),\n    BigInt(\"0xecdf4ee4abad48e9\"),\n    BigInt(\"0xf94e82182d395019\"),\n    BigInt(\"0x4ee52e3744d887c5\"),\n    BigInt(\"0xa1341c7cac0083b2\"),\n    BigInt(\"0x2302fb26c30c834a\"),\n    BigInt(\"0xaea3c587273bf7d3\"),\n    BigInt(\"0xf798e24961823ec7\"),\n    BigInt(\"0x962deba3e9a2cd94\"),\n  ],\n];\n\nexport { RC12, MAT_DIAG12_M_1, MAT_INTERNAL12 };\n","import { F1Field } from \"../core/F1Field\";\nimport { Poseidon2 } from \"../core/Poseidon2\";\nimport { getPoseidon2Params } from \"../core/Poseidon2Params\";\nimport { MAT_DIAG12_M_1, MAT_INTERNAL12, RC12 } from \"./constants\";\n\nconst goldilocksField = new F1Field(BigInt(\"18446744069414584321\"));\n\nconst Poseidon2Goldilocks12 = new Poseidon2(\n  getPoseidon2Params(12, 7, 8, 22, MAT_DIAG12_M_1, MAT_INTERNAL12, RC12),\n  goldilocksField\n);\nexport { Poseidon2Goldilocks12 };\n","type IHashOut = [bigint, bigint, bigint, bigint];\n\nimport { Poseidon2Goldilocks12 } from \"./instance\";\n\nconst SPONGE_RATE = 8;\nconst SPONGE_WIDTH = 12;\nconst ZERO = BigInt(0);\nconst F = Poseidon2Goldilocks12.primeField;\nfunction hashNToMNoPad(\n  inputs: bigint[] | BigUint64Array,\n  numOutputs: number\n): bigint[] {\n  const inputsLength = inputs.length;\n\n  let state: bigint[] = [\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n    ZERO,\n  ];\n  const nChunks = Math.floor(inputsLength / SPONGE_RATE);\n  for (let i = 0; i < nChunks; i++) {\n    state[0] = F.e(inputs[i * 8]);\n    state[1] = F.e(inputs[i * 8 + 1]);\n    state[2] = F.e(inputs[i * 8 + 2]);\n    state[3] = F.e(inputs[i * 8 + 3]);\n    state[4] = F.e(inputs[i * 8 + 4]);\n    state[5] = F.e(inputs[i * 8 + 5]);\n    state[6] = F.e(inputs[i * 8 + 6]);\n    state[7] = F.e(inputs[i * 8 + 7]);\n    const n_state = Poseidon2Goldilocks12.permute(state);\n    state[0] = n_state[0];\n    state[1] = n_state[1];\n    state[2] = n_state[2];\n    state[3] = n_state[3];\n    state[4] = n_state[4];\n    state[5] = n_state[5];\n    state[6] = n_state[6];\n    state[7] = n_state[7];\n    state[8] = n_state[8];\n    state[9] = n_state[9];\n    state[10] = n_state[10];\n    state[11] = n_state[11];\n  }\n  const start = nChunks * SPONGE_RATE;\n  const remaining = inputsLength - start;\n  if (remaining > 0 && remaining < state.length) {\n    for (let i = 0; i < remaining; i++) {\n      state[i] = F.e(inputs[start + i]);\n    }\n    const n_state = Poseidon2Goldilocks12.permute(state);\n    state[0] = n_state[0];\n    state[1] = n_state[1];\n    state[2] = n_state[2];\n    state[3] = n_state[3];\n    state[4] = n_state[4];\n    state[5] = n_state[5];\n    state[6] = n_state[6];\n    state[7] = n_state[7];\n    state[8] = n_state[8];\n    state[9] = n_state[9];\n    state[10] = n_state[10];\n    state[11] = n_state[11];\n  }\n  if (numOutputs === 4) {\n    return [state[0], state[1], state[2], state[3]];\n  }\n  const outputs: bigint[] = [];\n  const nOutputRounds = Math.ceil(numOutputs / SPONGE_RATE);\n  let outputsPushed = 0;\n  for (let i = 0; i < nOutputRounds; i++) {\n    for (let x = 0; x < SPONGE_RATE && outputsPushed < numOutputs; x++) {\n      outputs.push(state[x]);\n      outputsPushed++;\n    }\n    state = Poseidon2Goldilocks12.permute(state);\n  }\n  return outputs;\n}\nfunction hashPad(input: bigint[]) {\n  const paddedInput = input.concat([]);\n  paddedInput.push(BigInt(1));\n  while ((paddedInput.length + 1) % SPONGE_WIDTH !== 0) {\n    paddedInput.push(ZERO);\n  }\n  paddedInput.push(BigInt(1));\n  return hashNToMNoPad(paddedInput, 4).slice(0, 4);\n}\nfunction hashNoPad(input: bigint[] | BigUint64Array): IHashOut {\n  const output = hashNToMNoPad(input, 4);\n  return [output[0], output[1], output[2], output[3]];\n}\nfunction hashCapacity(inputs: bigint[], capacity: bigint[]) {\n  if (Array.isArray(capacity)) {\n    return Poseidon2Goldilocks12.permute(\n      inputs.concat(capacity).map(x => F.e(x) as any)\n    ).slice(0, 4);\n  } else {\n    return Poseidon2Goldilocks12.permute(\n      inputs.map(x => F.e(x) as any).concat([ZERO, ZERO, ZERO, ZERO])\n    ).slice(0, 4);\n  }\n}\nfunction twoToOne(a: IHashOut, b: IHashOut) {\n  return hashNoPad([a[0], a[1], a[2], a[3], b[0], b[1], b[2], b[3]]);\n}\nconst permute = Poseidon2Goldilocks12.permute.bind(Poseidon2Goldilocks12);\n\nexport {\n  F,\n  permute,\n  hashCapacity,\n  hashNToMNoPad,\n  hashPad,\n  hashNoPad,\n  twoToOne,\n};\nexport type { IHashOut };\n","import {\n  hashCapacity,\n  hashNToMNoPad,\n  hashPad,\n  hashNoPad,\n  twoToOne,\n} from \"./hash\";\n\nimport { Poseidon2Goldilocks12 } from \"./instance\";\n\nconst F = Poseidon2Goldilocks12.primeField;\nconst permute = Poseidon2Goldilocks12.permute.bind(Poseidon2Goldilocks12);\n\nexport {\n  Poseidon2Goldilocks12,\n  F,\n  permute,\n  hashCapacity,\n  hashNToMNoPad,\n  hashPad,\n  hashNoPad,\n  twoToOne,\n};\n"],"names":["MAT_DIAG12_M_1","zero","MAT_INTERNAL12","RC12","goldilocksField","F1Field","Poseidon2Goldilocks12","Poseidon2","getPoseidon2Params","SPONGE_RATE","SPONGE_WIDTH","ZERO","F","hashNToMNoPad","inputs","numOutputs","inputsLength","state","nChunks","i","n_state","start","remaining","outputs","nOutputRounds","outputsPushed","x","hashPad","input","paddedInput","hashNoPad","output","hashCapacity","capacity","twoToOne","a","b","permute"],"mappings":"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AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO,oBAAoB;AAAA,IAC3BA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,IACAA;AAAA,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"}